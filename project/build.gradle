plugins {
   id 'java'
}

java {
    sourceCompatibility = JavaVersion.toVersion(11)
    targetCompatibility = JavaVersion.toVersion(11)
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.0'
    testImplementation 'org.hamcrest:hamcrest-library:2.2'
}

test {
    ignoreFailures = true
    useJUnitPlatform()
}


task copyDocs (dependsOn: ['javadoc'], type:Copy) {
    from 'build/docs/'
    into 'build/reports/javadoc/'
}
 
task copyDir (type:Copy) {
    from 'src/main/html/'
    into 'build/reports/'
}

//////  Website publication on GitHub pages ///////////////////

task clonePages() {
    doLast {
        def thisRepo = rootProject.projectDir.toString()
        def pagesDir = "$buildDir/gh-pages"
        mkdir pagesDir
        project.delete {
            delete pagesDir
        }
        exec {
            workingDir = '.'
            commandLine = ['git', 'clone', 'file://' + thisRepo, '-b', 'gh-pages', pagesDir]
        }
    }
}

task copyReports (type: dependsOn: ['buildSite', 'clonePages']) {
    doLast {
        ant.copy (todir: pagesDir) {
            fileset(dir: 'build/reports')
        }
    }
}


task updateGHPages (dependsOn: 'copyReports') {
    group = "Reporting"
    description  'Copies reports to the gh-pages branch in preparation for a future push to GitHub'
    doLast {
        def pagesDir = "$buildDir/gh-pages"
        exec {
            workingDir = pagesDir
            commandLine = ['git', 'add', '.']
        }
        exec {
            workingDir = pagesDir
            commandLine = ['git', 'commit', '-m', 'Updating-webpages']
        }
        exec {
            workingDir = pagesDir
            commandLine = ['git', 'push']
        }
    }
}


task deployReports (dependsOn: ['updateGHPages',
                        'test',
                        'copyDocs',
                        'copyDir'])




